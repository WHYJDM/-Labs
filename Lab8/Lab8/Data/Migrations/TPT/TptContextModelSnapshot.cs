// <auto-generated />
using Lab8.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab8.Data.Migrations.TPT
{
    [DbContext(typeof(TptContext))]
    partial class TptContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Lab8.Models.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drinks", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Lab8.Models.AlcoholicDrink", b =>
                {
                    b.HasBaseType("Lab8.Models.Drink");

                    b.Property<double>("AlcoholPercentage")
                        .HasColumnType("REAL");

                    b.ToTable("AlcoholicDrinks", (string)null);
                });

            modelBuilder.Entity("Lab8.Models.NonAlcoholicDrink", b =>
                {
                    b.HasBaseType("Lab8.Models.Drink");

                    b.Property<double>("SugarPer100ml")
                        .HasColumnType("REAL");

                    b.ToTable("NonAlcoholicDrinks", (string)null);
                });

            modelBuilder.Entity("Lab8.Models.AlcoholicDrink", b =>
                {
                    b.HasOne("Lab8.Models.Drink", null)
                        .WithOne()
                        .HasForeignKey("Lab8.Models.AlcoholicDrink", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lab8.Models.NonAlcoholicDrink", b =>
                {
                    b.HasOne("Lab8.Models.Drink", null)
                        .WithOne()
                        .HasForeignKey("Lab8.Models.NonAlcoholicDrink", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
